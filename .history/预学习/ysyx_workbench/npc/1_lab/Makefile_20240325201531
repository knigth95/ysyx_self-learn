TOPNAME = top
NXDC_FILES = constr/top.nxdc
INC_PATH ?=

VERILATOR = verilator
VERILATOR_CFLAGS += -MMD --build -cc  \
				-O3 --x-assign fast --x-initial fast --noassert

BUILD_DIR = ./build
OBJ_DIR = $(BUILD_DIR)/obj_dir
BIN = $(BUILD_DIR)/$(TOPNAME)
# rules for NVBoard
include $(NVBOARD_HOME)/scripts/nvboard.mk
default: $(BIN)

$(shell mkdir -p $(BUILD_DIR))

# constraint file
SRC_AUTO_BIND = $(abspath $(BUILD_DIR)/auto_bind.cpp)
$(SRC_AUTO_BIND): $(NXDC_FILES)
	python3 $(NVBOARD_HOME)/scripts/auto_pin_bind.py $^ $@

# project source
VSRCS = $(shell find $(abspath ./vsrc) -name "*.v")
CSRCS = $(shell find $(abspath ./csrc) -name "*.c" -or -name "*.cc" -or -name "*.cpp")
CSRCS += $(SRC_AUTO_BIND)



# rules for verilator
INCFLAGS = $(addprefix -I, $(INC_PATH))
CXXFLAGS += $(INCFLAGS) -DTOP_NAME="\"V$(TOPNAME)\""

$(BIN): $(VSRCS) $(CSRCS) $(NVBOARD_ARCHIVE)
	@rm -rf $(OBJ_DIR)
	$(VERILATOR) $(VERILATOR_CFLAGS) \
		--top-module $(TOPNAME) $^ \
		$(addprefix -CFLAGS , $(CXXFLAGS)) $(addprefix -LDFLAGS , $(LDFLAGS)) \
		--Mdir $(OBJ_DIR) --exe -o $(abspath $(BIN))

all: default

# #############
# sim:
# 	@echo "Simulating RTL..."
# 	@echo $(VSRCS)
# 	verilator ./vsrc/top.v ./csrc/main.cpp --cc --trace --exe --build \
# 	-CFLAGS "-std=c++11" \
# 	-LDFLAGS -lreadline
# 	@echo "Simulation compiled successfully."

wave: top
	@echo "Launching GTKWave..."
	gtkwave ./*.vcd

count:
	@echo "Counting lines of code..."
	find . -name "sim_main.cpp" -or -name "*.[vc]" | xargs wc -l

##############

run: $(BIN)
	@$^

clean:
	
	rm -rf $(BUILD_DIR)

.PHONY: default all clean run
